{
  "contractName": "HospitalDetails",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "patients",
      "outputs": [
        {
          "internalType": "string",
          "name": "patientId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "patientId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        }
      ],
      "name": "addPatient",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"addPatient\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"patients\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"patientId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Hospital.sol\":\"HospitalDetails\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Hospital.sol\":{\"keccak256\":\"0xbde1c8dccde0d94eface0bc9b215c8819da9439bb64ac134450a65a31322011f\",\"urls\":[\"bzz-raw://22c09d82718add579eea134673d6deb5bd1d54817942706277e6aba0e7b5116d\",\"dweb:/ipfs/QmQ3v7BrAqcX1gP74ZqcsxuGHsUwYiF5139Uf9wNn4mtFQ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610684806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a5b7d9841461003b578063c6009d8414610057575b600080fd5b610055600480360361005091908101906103a2565b610088565b005b610071600480360361006c9190810190610361565b61012d565b60405161007f9291906104c6565b60405180910390f35b60008251116100cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c3906104f6565b60405180910390fd5b6040518060400160405280838152602001828152506000836040516100f191906104af565b9081526020016040518091039020600082015181600001908051906020019061011b9291906101ff565b50602082015181600101559050505050565b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101ef5780601f106101c4576101008083540402835291602001916101ef565b820191906000526020600020905b8154815290600101906020018083116101d257829003601f168201915b5050505050908060010154905082565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061024057805160ff191683800117855561026e565b8280016001018555821561026e579182015b8281111561026d578251825591602001919060010190610252565b5b50905061027b919061027f565b5090565b6102a191905b8082111561029d576000816000905550600101610285565b5090565b90565b600082601f8301126102b557600080fd5b81356102c86102c382610543565b610516565b915080825260208301602083018583830111156102e457600080fd5b6102ef8382846105d7565b50505092915050565b600082601f83011261030957600080fd5b813561031c6103178261056f565b610516565b9150808252602083016020830185838301111561033857600080fd5b6103438382846105d7565b50505092915050565b60008135905061035b8161062a565b92915050565b60006020828403121561037357600080fd5b600082013567ffffffffffffffff81111561038d57600080fd5b610399848285016102a4565b91505092915050565b600080604083850312156103b557600080fd5b600083013567ffffffffffffffff8111156103cf57600080fd5b6103db858286016102f8565b92505060206103ec8582860161034c565b9150509250929050565b6000610401826105a6565b61040b81856105c2565b935061041b8185602086016105e6565b80840191505092915050565b60006104328261059b565b61043c81856105b1565b935061044c8185602086016105e6565b61045581610619565b840191505092915050565b600061046d601a836105b1565b91507f50617469656e742049442063616e6e6f7420626520656d7074790000000000006000830152602082019050919050565b6104a9816105cd565b82525050565b60006104bb82846103f6565b915081905092915050565b600060408201905081810360008301526104e08185610427565b90506104ef60208301846104a0565b9392505050565b6000602082019050818103600083015261050f81610460565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561053957600080fd5b8060405250919050565b600067ffffffffffffffff82111561055a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561058657600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156106045780820151818401526020810190506105e9565b83811115610613576000848401525b50505050565b6000601f19601f8301169050919050565b610633816105cd565b811461063e57600080fd5b5056fea365627a7a723158207493e03d1194a4c036310efb5722ea429edfbf84d0d3ef765b2d9ccaf4cdecef6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063a5b7d9841461003b578063c6009d8414610057575b600080fd5b610055600480360361005091908101906103a2565b610088565b005b610071600480360361006c9190810190610361565b61012d565b60405161007f9291906104c6565b60405180910390f35b60008251116100cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c3906104f6565b60405180910390fd5b6040518060400160405280838152602001828152506000836040516100f191906104af565b9081526020016040518091039020600082015181600001908051906020019061011b9291906101ff565b50602082015181600101559050505050565b600081805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156101ef5780601f106101c4576101008083540402835291602001916101ef565b820191906000526020600020905b8154815290600101906020018083116101d257829003601f168201915b5050505050908060010154905082565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061024057805160ff191683800117855561026e565b8280016001018555821561026e579182015b8281111561026d578251825591602001919060010190610252565b5b50905061027b919061027f565b5090565b6102a191905b8082111561029d576000816000905550600101610285565b5090565b90565b600082601f8301126102b557600080fd5b81356102c86102c382610543565b610516565b915080825260208301602083018583830111156102e457600080fd5b6102ef8382846105d7565b50505092915050565b600082601f83011261030957600080fd5b813561031c6103178261056f565b610516565b9150808252602083016020830185838301111561033857600080fd5b6103438382846105d7565b50505092915050565b60008135905061035b8161062a565b92915050565b60006020828403121561037357600080fd5b600082013567ffffffffffffffff81111561038d57600080fd5b610399848285016102a4565b91505092915050565b600080604083850312156103b557600080fd5b600083013567ffffffffffffffff8111156103cf57600080fd5b6103db858286016102f8565b92505060206103ec8582860161034c565b9150509250929050565b6000610401826105a6565b61040b81856105c2565b935061041b8185602086016105e6565b80840191505092915050565b60006104328261059b565b61043c81856105b1565b935061044c8185602086016105e6565b61045581610619565b840191505092915050565b600061046d601a836105b1565b91507f50617469656e742049442063616e6e6f7420626520656d7074790000000000006000830152602082019050919050565b6104a9816105cd565b82525050565b60006104bb82846103f6565b915081905092915050565b600060408201905081810360008301526104e08185610427565b90506104ef60208301846104a0565b9392505050565b6000602082019050818103600083015261050f81610460565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561053957600080fd5b8060405250919050565b600067ffffffffffffffff82111561055a57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561058657600080fd5b601f19601f8301169050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b82818337600083830152505050565b60005b838110156106045780820151818401526020810190506105e9565b83811115610613576000848401525b50505050565b6000601f19601f8301169050919050565b610633816105cd565b811461063e57600080fd5b5056fea365627a7a723158207493e03d1194a4c036310efb5722ea429edfbf84d0d3ef765b2d9ccaf4cdecef6c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "95:578:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:578:0;;;;;;;",
  "deployedSourceMap": "95:578:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;95:578:0;;;;;;;;;;;;;;;;;;;;;;;;399:271;;;;;;;;;;;;;;;;:::i;:::-;;348:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;399:271;572:1;552:9;546:23;:27;538:66;;;;;;;;;;;;;;;;;;;;;;639:23;;;;;;;;647:9;639:23;;;;658:3;639:23;;;617:8;626:9;617:19;;;;;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;399:271;;:::o;348:42::-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;348:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;95:578::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6:434:-1:-;;104:3;97:4;89:6;85:17;81:27;71:2;;122:1;119;112:12;71:2;159:6;146:20;181:61;196:45;234:6;196:45;;;181:61;;;172:70;;262:6;255:5;248:21;298:4;290:6;286:17;331:4;324:5;320:16;366:3;357:6;352:3;348:16;345:25;342:2;;;383:1;380;373:12;342:2;393:41;427:6;422:3;417;393:41;;;64:376;;;;;;;;449:442;;551:3;544:4;536:6;532:17;528:27;518:2;;569:1;566;559:12;518:2;606:6;593:20;628:65;643:49;685:6;643:49;;;628:65;;;619:74;;713:6;706:5;699:21;749:4;741:6;737:17;782:4;775:5;771:16;817:3;808:6;803:3;799:16;796:25;793:2;;;834:1;831;824:12;793:2;844:41;878:6;873:3;868;844:41;;;511:380;;;;;;;;899:130;;979:6;966:20;957:29;;991:33;1018:5;991:33;;;951:78;;;;;1036:339;;1146:2;1134:9;1125:7;1121:23;1117:32;1114:2;;;1162:1;1159;1152:12;1114:2;1225:1;1214:9;1210:17;1197:31;1248:18;1240:6;1237:30;1234:2;;;1280:1;1277;1270:12;1234:2;1300:59;1351:7;1342:6;1331:9;1327:22;1300:59;;;1290:69;;1176:189;1108:267;;;;;1382:472;;;1513:2;1501:9;1492:7;1488:23;1484:32;1481:2;;;1529:1;1526;1519:12;1481:2;1592:1;1581:9;1577:17;1564:31;1615:18;1607:6;1604:30;1601:2;;;1647:1;1644;1637:12;1601:2;1667:63;1722:7;1713:6;1702:9;1698:22;1667:63;;;1657:73;;1543:193;1767:2;1785:53;1830:7;1821:6;1810:9;1806:22;1785:53;;;1775:63;;1746:98;1475:379;;;;;;1861:360;;1991:39;2024:5;1991:39;;;2042:89;2124:6;2119:3;2042:89;;;2035:96;;2136:52;2181:6;2176:3;2169:4;2162:5;2158:16;2136:52;;;2209:6;2204:3;2200:16;2193:23;;1971:250;;;;;;2228:339;;2336:35;2365:5;2336:35;;;2383:71;2447:6;2442:3;2383:71;;;2376:78;;2459:52;2504:6;2499:3;2492:4;2485:5;2481:16;2459:52;;;2532:29;2554:6;2532:29;;;2527:3;2523:39;2516:46;;2316:251;;;;;;2575:326;;2735:67;2799:2;2794:3;2735:67;;;2728:74;;2835:28;2831:1;2826:3;2822:11;2815:49;2892:2;2887:3;2883:12;2876:19;;2721:180;;;;2909:113;2992:24;3010:5;2992:24;;;2987:3;2980:37;2974:48;;;3029:266;;3175:95;3266:3;3257:6;3175:95;;;3168:102;;3287:3;3280:10;;3156:139;;;;;3302:404;;3464:2;3453:9;3449:18;3441:26;;3514:9;3508:4;3504:20;3500:1;3489:9;3485:17;3478:47;3539:74;3608:4;3599:6;3539:74;;;3531:82;;3624:72;3692:2;3681:9;3677:18;3668:6;3624:72;;;3435:271;;;;;;3713:407;;3904:2;3893:9;3889:18;3881:26;;3954:9;3948:4;3944:20;3940:1;3929:9;3925:17;3918:47;3979:131;4105:4;3979:131;;;3971:139;;3875:245;;;;4127:256;;4189:2;4183:9;4173:19;;4227:4;4219:6;4215:17;4326:6;4314:10;4311:22;4290:18;4278:10;4275:34;4272:62;4269:2;;;4347:1;4344;4337:12;4269:2;4367:10;4363:2;4356:22;4167:216;;;;;4390:318;;4530:18;4522:6;4519:30;4516:2;;;4562:1;4559;4552:12;4516:2;4629:4;4625:9;4618:4;4610:6;4606:17;4602:33;4594:41;;4693:4;4687;4683:15;4675:23;;4453:255;;;;4715:322;;4859:18;4851:6;4848:30;4845:2;;;4891:1;4888;4881:12;4845:2;4958:4;4954:9;4947:4;4939:6;4935:17;4931:33;4923:41;;5022:4;5016;5012:15;5004:23;;4782:255;;;;5044:118;;5134:5;5128:12;5118:22;;5099:63;;;;5169:122;;5263:5;5257:12;5247:22;;5228:63;;;;5299:163;;5414:6;5409:3;5402:19;5451:4;5446:3;5442:14;5427:29;;5395:67;;;;;5471:145;;5607:3;5592:18;;5585:31;;;;;5624:72;;5686:5;5675:16;;5669:27;;;;5704:145;5785:6;5780:3;5775;5762:30;5841:1;5832:6;5827:3;5823:16;5816:27;5755:94;;;;5858:268;5923:1;5930:101;5944:6;5941:1;5938:13;5930:101;;;6020:1;6015:3;6011:11;6005:18;6001:1;5996:3;5992:11;5985:39;5966:2;5963:1;5959:10;5954:15;;5930:101;;;6046:6;6043:1;6040:13;6037:2;;;6111:1;6102:6;6097:3;6093:16;6086:27;6037:2;5907:219;;;;;6134:97;;6222:2;6218:7;6213:2;6206:5;6202:14;6198:28;6188:38;;6182:49;;;;6239:117;6308:24;6326:5;6308:24;;;6301:5;6298:35;6288:2;;6347:1;6344;6337:12;6288:2;6282:74;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\ncontract HospitalDetails {\r\n    // Struct to represent a patient's details (excluding sensitive data like name)\r\n    struct Patient {\r\n        string patientId;\r\n        uint age; // Consider hashing sensitive data before storing on-chain\r\n    }\r\n\r\n    mapping(string => Patient) public patients;\r\n\r\n    function addPatient(string memory patientId, uint age) public {\r\n        // Validate patientId to prevent empty or invalid values\r\n        require(bytes(patientId).length > 0, \"Patient ID cannot be empty\");\r\n\r\n        patients[patientId] = Patient(patientId, age);\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\kotha\\Desktop\\SE\\patient_data_management\\contracts\\Hospital.sol",
  "ast": {
    "absolutePath": "project:/contracts/Hospital.sol",
    "exportedSymbols": {
      "HospitalDetails": [
        39
      ]
    },
    "id": 40,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "58:33:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 39,
        "linearizedBaseContracts": [
          39
        ],
        "name": "HospitalDetails",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "HospitalDetails.Patient",
            "id": 7,
            "members": [
              {
                "constant": false,
                "id": 4,
                "name": "patientId",
                "nodeType": "VariableDeclaration",
                "scope": 7,
                "src": "238:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 3,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "238:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6,
                "name": "age",
                "nodeType": "VariableDeclaration",
                "scope": 7,
                "src": "265:8:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "265:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Patient",
            "nodeType": "StructDefinition",
            "scope": 39,
            "src": "212:128:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "patients",
            "nodeType": "VariableDeclaration",
            "scope": 39,
            "src": "348:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Patient_$7_storage_$",
              "typeString": "mapping(string => struct HospitalDetails.Patient)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "356:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "348:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Patient_$7_storage_$",
                "typeString": "mapping(string => struct HospitalDetails.Patient)"
              },
              "valueType": {
                "contractScope": null,
                "id": 9,
                "name": "Patient",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7,
                "src": "366:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Patient_$7_storage_ptr",
                  "typeString": "struct HospitalDetails.Patient"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "461:209:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 20,
                                "name": "patientId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "552:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 19,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "546:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 21,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "546:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "546:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "572:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "546:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50617469656e742049442063616e6e6f7420626520656d707479",
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "575:28:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28bdf382440fa4116bdda25bcfef0045a4b02ece70872c990eb37af47b6a5a6f",
                          "typeString": "literal_string \"Patient ID cannot be empty\""
                        },
                        "value": "Patient ID cannot be empty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28bdf382440fa4116bdda25bcfef0045a4b02ece70872c990eb37af47b6a5a6f",
                          "typeString": "literal_string \"Patient ID cannot be empty\""
                        }
                      ],
                      "id": 18,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        324,
                        325
                      ],
                      "referencedDeclaration": 325,
                      "src": "538:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "538:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "538:66:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 28,
                        "name": "patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "617:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_Patient_$7_storage_$",
                          "typeString": "mapping(string memory => struct HospitalDetails.Patient storage ref)"
                        }
                      },
                      "id": 30,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 29,
                        "name": "patientId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "626:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "617:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$7_storage",
                        "typeString": "struct HospitalDetails.Patient storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 32,
                          "name": "patientId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13,
                          "src": "647:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 33,
                          "name": "age",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15,
                          "src": "658:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 31,
                        "name": "Patient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "639:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Patient_$7_storage_ptr_$",
                          "typeString": "type(struct HospitalDetails.Patient storage pointer)"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "639:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Patient_$7_memory",
                        "typeString": "struct HospitalDetails.Patient memory"
                      }
                    },
                    "src": "617:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Patient_$7_storage",
                      "typeString": "struct HospitalDetails.Patient storage ref"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "617:45:0"
                }
              ]
            },
            "documentation": null,
            "id": 38,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPatient",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "name": "patientId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "419:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15,
                  "name": "age",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "444:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "418:35:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "461:0:0"
            },
            "scope": 39,
            "src": "399:271:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 40,
        "src": "95:578:0"
      }
    ],
    "src": "33:640:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/Hospital.sol",
      "exportedSymbols": {
        "HospitalDetails": [
          39
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "58:33:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            39
          ],
          "name": "HospitalDetails",
          "scope": 40
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "HospitalDetails.Patient",
              "name": "Patient",
              "scope": 39,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "patientId",
                  "scope": 7,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 3,
                    "name": "ElementaryTypeName",
                    "src": "238:6:0"
                  }
                ],
                "id": 4,
                "name": "VariableDeclaration",
                "src": "238:16:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "age",
                  "scope": 7,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 5,
                    "name": "ElementaryTypeName",
                    "src": "265:4:0"
                  }
                ],
                "id": 6,
                "name": "VariableDeclaration",
                "src": "265:8:0"
              }
            ],
            "id": 7,
            "name": "StructDefinition",
            "src": "212:128:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "patients",
              "scope": 39,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => struct HospitalDetails.Patient)",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => struct HospitalDetails.Patient)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "356:6:0"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Patient",
                      "referencedDeclaration": 7,
                      "type": "struct HospitalDetails.Patient"
                    },
                    "id": 9,
                    "name": "UserDefinedTypeName",
                    "src": "366:7:0"
                  }
                ],
                "id": 10,
                "name": "Mapping",
                "src": "348:26:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "348:42:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addPatient",
              "scope": 39,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "patientId",
                      "scope": 38,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 12,
                        "name": "ElementaryTypeName",
                        "src": "419:6:0"
                      }
                    ],
                    "id": 13,
                    "name": "VariableDeclaration",
                    "src": "419:23:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "age",
                      "scope": 38,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 14,
                        "name": "ElementaryTypeName",
                        "src": "444:4:0"
                      }
                    ],
                    "id": 15,
                    "name": "VariableDeclaration",
                    "src": "444:8:0"
                  }
                ],
                "id": 16,
                "name": "ParameterList",
                "src": "418:35:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17,
                "name": "ParameterList",
                "src": "461:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_28bdf382440fa4116bdda25bcfef0045a4b02ece70872c990eb37af47b6a5a6f",
                                  "typeString": "literal_string \"Patient ID cannot be empty\""
                                }
                              ],
                              "overloadedDeclarations": [
                                324,
                                325
                              ],
                              "referencedDeclaration": 325,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 18,
                            "name": "Identifier",
                            "src": "538:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "referencedDeclaration": null,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes memory",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes storage pointer)",
                                          "value": "bytes"
                                        },
                                        "id": 19,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "546:5:0"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 13,
                                          "type": "string memory",
                                          "value": "patientId"
                                        },
                                        "id": 20,
                                        "name": "Identifier",
                                        "src": "552:9:0"
                                      }
                                    ],
                                    "id": 21,
                                    "name": "FunctionCall",
                                    "src": "546:16:0"
                                  }
                                ],
                                "id": 22,
                                "name": "MemberAccess",
                                "src": "546:23:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 23,
                                "name": "Literal",
                                "src": "572:1:0"
                              }
                            ],
                            "id": 24,
                            "name": "BinaryOperation",
                            "src": "546:27:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "50617469656e742049442063616e6e6f7420626520656d707479",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Patient ID cannot be empty\"",
                              "value": "Patient ID cannot be empty"
                            },
                            "id": 25,
                            "name": "Literal",
                            "src": "575:28:0"
                          }
                        ],
                        "id": 26,
                        "name": "FunctionCall",
                        "src": "538:66:0"
                      }
                    ],
                    "id": 27,
                    "name": "ExpressionStatement",
                    "src": "538:66:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct HospitalDetails.Patient storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct HospitalDetails.Patient storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "mapping(string memory => struct HospitalDetails.Patient storage ref)",
                                  "value": "patients"
                                },
                                "id": 28,
                                "name": "Identifier",
                                "src": "617:8:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "string memory",
                                  "value": "patientId"
                                },
                                "id": 29,
                                "name": "Identifier",
                                "src": "626:9:0"
                              }
                            ],
                            "id": 30,
                            "name": "IndexAccess",
                            "src": "617:19:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "struct HospitalDetails.Patient memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7,
                                  "type": "type(struct HospitalDetails.Patient storage pointer)",
                                  "value": "Patient"
                                },
                                "id": 31,
                                "name": "Identifier",
                                "src": "639:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 13,
                                  "type": "string memory",
                                  "value": "patientId"
                                },
                                "id": 32,
                                "name": "Identifier",
                                "src": "647:9:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 15,
                                  "type": "uint256",
                                  "value": "age"
                                },
                                "id": 33,
                                "name": "Identifier",
                                "src": "658:3:0"
                              }
                            ],
                            "id": 34,
                            "name": "FunctionCall",
                            "src": "639:23:0"
                          }
                        ],
                        "id": 35,
                        "name": "Assignment",
                        "src": "617:45:0"
                      }
                    ],
                    "id": 36,
                    "name": "ExpressionStatement",
                    "src": "617:45:0"
                  }
                ],
                "id": 37,
                "name": "Block",
                "src": "461:209:0"
              }
            ],
            "id": 38,
            "name": "FunctionDefinition",
            "src": "399:271:0"
          }
        ],
        "id": 39,
        "name": "ContractDefinition",
        "src": "95:578:0"
      }
    ],
    "id": 40,
    "name": "SourceUnit",
    "src": "33:640:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-04-30T16:49:14.066Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}